-- ============================================================================
-- AutoDark - Database Schema
-- ============================================================================
-- Version: 2.1
-- Last Updated: 2025-01-28
-- Description: Complete database schema for AutoDark YouTube automation platform
--
-- This file contains the DDL (Data Definition Language) to create all tables,
-- relationships, and constraints for the AutoDark project.
--
-- IMPORTANT:
-- - This script creates tables ONLY (no data)
-- - RLS (Row Level Security) policies must be configured separately
-- - Run this script on a clean database or use DROP statements below
-- ============================================================================

-- ============================================================================
-- DROP TABLES (Reverse dependency order)
-- ============================================================================
-- Uncomment these lines to recreate the schema from scratch
-- WARNING: This will delete ALL data!

-- DROP TABLE IF EXISTS public.videos CASCADE;
-- DROP TABLE IF EXISTS public.roteiros CASCADE;
-- DROP TABLE IF EXISTS public.canais CASCADE;
-- DROP TABLE IF EXISTS public.vozes CASCADE;
-- DROP TABLE IF EXISTS public.apis CASCADE;
-- DROP TABLE IF EXISTS public.modelos_imagem CASCADE;

-- ============================================================================
-- TABLE 1: apis
-- ============================================================================
-- Stores API credentials for external platforms
-- Dependencies: None (base table)
-- ============================================================================

CREATE TABLE IF NOT EXISTS public.apis (
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    plataforma TEXT NOT NULL DEFAULT ''::text,
    api_key TEXT NOT NULL DEFAULT ''::text,
    group_id TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- Comments
COMMENT ON TABLE public.apis IS 'API credentials for external platforms (ElevenLabs, Fish-Audio, Minimax, Runware, etc.)';
COMMENT ON COLUMN public.apis.plataforma IS 'Platform name (e.g., ElevenLabs, Fish-Audio, Minimax)';
COMMENT ON COLUMN public.apis.api_key IS 'Encrypted API key (never exposed to frontend)';
COMMENT ON COLUMN public.apis.group_id IS 'Optional grouping identifier';

-- Enable RLS (configure policies separately)
ALTER TABLE public.apis ENABLE ROW LEVEL SECURITY;

-- ============================================================================
-- TABLE 2: modelos_imagem
-- ============================================================================
-- Catalog of image generation models (Runware)
-- Dependencies: None (independent table)
-- ============================================================================

CREATE TABLE IF NOT EXISTS public.modelos_imagem (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT,
    air TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- Comments
COMMENT ON TABLE public.modelos_imagem IS 'Catalog of image generation models from Runware API';
COMMENT ON COLUMN public.modelos_imagem.air IS 'AIR identifier (e.g., runway:gen3@1)';
COMMENT ON COLUMN public.modelos_imagem.name IS 'Human-readable model name';

-- Enable RLS
ALTER TABLE public.modelos_imagem ENABLE ROW LEVEL SECURITY;

-- ============================================================================
-- TABLE 3: vozes
-- ============================================================================
-- Voice catalog from multiple TTS platforms
-- Dependencies: apis (id_plataforma → apis.id)
-- ============================================================================

CREATE TABLE IF NOT EXISTS public.vozes (
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_voz TEXT NOT NULL DEFAULT ''::text,
    voice_id TEXT NOT NULL DEFAULT ''::text,
    idioma TEXT NOT NULL DEFAULT ''::text,
    genero TEXT NOT NULL DEFAULT ''::text,
    id_plataforma SMALLINT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),

    -- Foreign Keys
    CONSTRAINT vozes_id_plataforma_fkey
        FOREIGN KEY (id_plataforma)
        REFERENCES public.apis(id)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION
);

-- Comments
COMMENT ON TABLE public.vozes IS 'Voice catalog from ElevenLabs, Fish-Audio, and Minimax platforms';
COMMENT ON COLUMN public.vozes.nome_voz IS 'Display name of the voice';
COMMENT ON COLUMN public.vozes.voice_id IS 'Platform-specific voice identifier';
COMMENT ON COLUMN public.vozes.idioma IS 'Language code (pt-br, en, es, etc.)';
COMMENT ON COLUMN public.vozes.genero IS 'Voice gender';
COMMENT ON COLUMN public.vozes.id_plataforma IS 'Foreign key to apis table';

-- Enable RLS
ALTER TABLE public.vozes ENABLE ROW LEVEL SECURITY;

-- ============================================================================
-- TABLE 4: canais
-- ============================================================================
-- YouTube channel configurations
-- Dependencies: vozes (voz_prefereida → vozes.id)
-- ============================================================================

CREATE TABLE IF NOT EXISTS public.canais (
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_canal TEXT NOT NULL DEFAULT ''::text,
    url_canal TEXT,
    profile_image TEXT,

    -- Prompts
    prompt_titulo TEXT NOT NULL DEFAULT ''::text,
    prompt_roteiro TEXT NOT NULL DEFAULT ''::text,
    prompt_thumb TEXT,

    -- Voice and media settings
    voz_prefereida SMALLINT,
    media_chars NUMERIC,

    -- Style configurations (JSONB)
    caption_style JSONB,
    detailed_style JSONB,

    -- Training data (JSONB arrays)
    titulos JSONB,
    roteiros JSONB,

    -- External URLs
    drive_url TEXT,
    trilha_url TEXT,

    -- Deprecated (kept for backward compatibility)
    api_key TEXT,

    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),

    -- Foreign Keys
    CONSTRAINT canais_voz_prefereida_fkey
        FOREIGN KEY (voz_prefereida)
        REFERENCES public.vozes(id)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION
);

-- Comments
COMMENT ON TABLE public.canais IS 'YouTube channel configurations and settings';
COMMENT ON COLUMN public.canais.nome_canal IS 'Channel display name';
COMMENT ON COLUMN public.canais.url_canal IS 'YouTube channel URL';
COMMENT ON COLUMN public.canais.profile_image IS 'Channel thumbnail/logo URL';
COMMENT ON COLUMN public.canais.prompt_titulo IS 'AI prompt for generating video titles';
COMMENT ON COLUMN public.canais.prompt_roteiro IS 'AI prompt for generating scripts';
COMMENT ON COLUMN public.canais.prompt_thumb IS 'AI prompt for generating thumbnails';
COMMENT ON COLUMN public.canais.voz_prefereida IS 'Default voice for TTS (foreign key to vozes)';
COMMENT ON COLUMN public.canais.media_chars IS 'Average character count per script';
COMMENT ON COLUMN public.canais.caption_style IS 'JSONB: Caption style config (karaoke or traditional)';
COMMENT ON COLUMN public.canais.detailed_style IS 'JSONB: Detailed visual style settings';
COMMENT ON COLUMN public.canais.titulos IS 'JSONB: Training data - collected video titles';
COMMENT ON COLUMN public.canais.roteiros IS 'JSONB: Training data - collected scripts';
COMMENT ON COLUMN public.canais.drive_url IS 'Google Drive folder URL for media';
COMMENT ON COLUMN public.canais.trilha_url IS 'Background music/soundtrack URL';

-- Enable RLS
ALTER TABLE public.canais ENABLE ROW LEVEL SECURITY;

-- ============================================================================
-- TABLE 5: roteiros
-- ============================================================================
-- Generated video scripts with audio and images
-- Dependencies: canais (canal_id → canais.id) - CASCADE DELETE
-- ============================================================================

CREATE TABLE IF NOT EXISTS public.roteiros (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    canal_id SMALLINT NOT NULL,
    titulo TEXT,
    roteiro TEXT,
    text_thumb TEXT,

    -- Media paths
    audio_path TEXT,
    images_path JSONB,
    images_info JSONB,
    transcricao_timestamp TEXT,

    -- Status tracking
    status TEXT NOT NULL DEFAULT 'gerando_roteiro'::text,

    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),

    -- Foreign Keys
    CONSTRAINT roteiros_canal_id_fkey
        FOREIGN KEY (canal_id)
        REFERENCES public.canais(id)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

-- Comments
COMMENT ON TABLE public.roteiros IS 'Generated video scripts with associated media';
COMMENT ON COLUMN public.roteiros.canal_id IS 'Foreign key to canais (CASCADE on delete)';
COMMENT ON COLUMN public.roteiros.titulo IS 'Video title';
COMMENT ON COLUMN public.roteiros.roteiro IS 'Full script text';
COMMENT ON COLUMN public.roteiros.text_thumb IS 'Thumbnail text/description';
COMMENT ON COLUMN public.roteiros.audio_path IS 'URL to generated audio file';
COMMENT ON COLUMN public.roteiros.images_path IS 'JSONB array of image URLs';
COMMENT ON COLUMN public.roteiros.images_info IS 'JSONB metadata about generated images';
COMMENT ON COLUMN public.roteiros.transcricao_timestamp IS 'Timestamped transcription for captions';
COMMENT ON COLUMN public.roteiros.status IS 'Status: gerando_roteiro, pronto, processando, erro';

-- Enable RLS
ALTER TABLE public.roteiros ENABLE ROW LEVEL SECURITY;

-- ============================================================================
-- TABLE 6: videos
-- ============================================================================
-- Final rendered videos
-- Dependencies: roteiros (id → roteiros.id) - CASCADE DELETE
-- NOTE: Uses roteiros.id as its own primary key (1:1 relationship)
-- ============================================================================

CREATE TABLE IF NOT EXISTS public.videos (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    status TEXT,
    video_path TEXT,
    thumb_path TEXT,
    caption BOOLEAN,

    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),

    -- Primary Key
    CONSTRAINT videos_pkey PRIMARY KEY (id),

    -- Unique Constraint (additional to PK)
    CONSTRAINT videos_id_key UNIQUE (id),

    -- Foreign Key (CASCADE on delete)
    CONSTRAINT videos_id_fkey
        FOREIGN KEY (id)
        REFERENCES public.roteiros(id)
        ON DELETE CASCADE
        ON UPDATE NO ACTION
);

-- Comments
COMMENT ON TABLE public.videos IS 'Final rendered videos linked to scripts (1:1 relationship)';
COMMENT ON COLUMN public.videos.id IS 'Primary key AND foreign key to roteiros.id (1:1)';
COMMENT ON COLUMN public.videos.status IS 'Status: gerando, pronto, publicado, erro';
COMMENT ON COLUMN public.videos.video_path IS 'URL to rendered video file';
COMMENT ON COLUMN public.videos.thumb_path IS 'URL to video thumbnail';
COMMENT ON COLUMN public.videos.caption IS 'Whether captions are enabled';

-- Enable RLS
ALTER TABLE public.videos ENABLE ROW LEVEL SECURITY;

-- ============================================================================
-- INDEXES
-- ============================================================================
-- Note: Primary key indexes are created automatically
-- Add custom indexes here if needed for query optimization

-- Example: Index for frequently queried columns
-- CREATE INDEX IF NOT EXISTS idx_roteiros_status ON public.roteiros(status);
-- CREATE INDEX IF NOT EXISTS idx_videos_status ON public.videos(status);

-- ============================================================================
-- ROW LEVEL SECURITY (RLS) POLICIES
-- ============================================================================
-- RLS is ENABLED on all tables above
-- Configure policies separately based on your authentication setup
--
-- Example policies (uncomment and adjust as needed):
--
-- -- Allow authenticated users to read their own data
-- CREATE POLICY "Users can view own canais"
--   ON public.canais FOR SELECT
--   USING (auth.uid() = user_id);
--
-- -- Allow service role full access
-- CREATE POLICY "Service role full access"
--   ON public.canais FOR ALL
--   USING (auth.role() = 'service_role');

-- ============================================================================
-- NOTES
-- ============================================================================
--
-- CASCADE DELETE BEHAVIOR:
-- 1. Deleting a canal → deletes all roteiros (CASCADE)
-- 2. Deleting a roteiro → deletes the video (CASCADE)
-- 3. Deleting an api → does NOT delete vozes (NO ACTION)
-- 4. Deleting a voz → does NOT delete canais (NO ACTION)
--
-- TABLE CREATION ORDER (dependencies):
-- 1. apis (no dependencies)
-- 2. modelos_imagem (no dependencies)
-- 3. vozes (depends on apis)
-- 4. canais (depends on vozes)
-- 5. roteiros (depends on canais)
-- 6. videos (depends on roteiros)
--
-- UNIQUE CONSTRAINTS:
-- - videos.id has UNIQUE constraint in addition to being PRIMARY KEY
--
-- JSONB COLUMNS:
-- - canais.caption_style: Caption styling configuration
-- - canais.detailed_style: Detailed visual settings
-- - canais.titulos: Array of collected titles for training
-- - canais.roteiros: Array of collected scripts for training
-- - roteiros.images_path: Array of image URLs
-- - roteiros.images_info: Metadata about generated images
--
-- ============================================================================
-- END OF SCHEMA
-- ============================================================================
